"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj}}return _typeof(obj)}(function(){function objectTag(data){return Object.prototype.toString.call(data).slice(8,-1)}function merge(source,merged){for(var key in merged){if(objectTag(merged[key])==="Object"){if(_typeof(source[key])!=="object")source[key]={};source[key]=merge(source[key],merged[key])}else{source[key]=merged[key]}}return source}function bCounter(data){if(!data||!data.node)throw Error("Missing required aCounter parameters (node).");this.internal={intervalId:null,value:0,loops:0,increment:0,loop:0};this.params={};merge(this.params,bCounter.defaults);merge(this.params,data);this.params.node.counter=this;if(!this.params.to){try{this.params.to=parseFloat(this.params.node.textContent,10)}catch(error){throw Error("Unable to get aCounter value")}}this.run=this.run.bind(this);if(this.params.autorun)this.run()}bCounter.defaults={node:null,from:0,to:null,duration:3000,refresh:30,autorun:true,formatter:null,onStart:null,onUpdate:null,onComplete:null};bCounter.prototype.run=function(){clearInterval(this.internal.intervalId);this.internal.value=this.params.from;this.internal.loops=Math.ceil(this.params.duration/this.params.refresh);this.internal.increment=(this.params.to-this.params.from)/this.internal.loops;this.internal.loop=0;var event=new CustomEvent("counterStart");event.value=~~this.internal.value;if(this.params.node.dispatchEvent(event)&&this.params.onStart instanceof Function){this.params.onStart.call(this,~~this.internal.value)}this.internal.intervalId=setInterval(this.update.bind(this),this.params.refresh)};bCounter.prototype.update=function(){this.internal.value+=this.internal.increment;this.internal.loop++;var event=new CustomEvent("counterUpdate");event.value=~~this.internal.value;if(this.params.node.dispatchEvent(event)&&this.params.onUpdate instanceof Function){this.params.onUpdate.call(this,~~this.internal.value)}if(this.internal.loop>=this.internal.loops){clearInterval(this.internal.intervalId);this.internal.value=this.params.to;var event=new CustomEvent("counterComplete");event.value=~~this.internal.value;if(this.params.node.dispatchEvent(event)&&this.params.onComplete instanceof Function){this.params.onComplete.call(this,~~this.internal.value)}}this.render()};bCounter.prototype.render=function(){if(this.params.formatter instanceof Function){this.params.node.innerHTML=this.params.formatter.call(this,this.internal.value)}else{this.params.node.innerHTML=~~this.internal.value}};if(!window.bCounter){window.bCounter=bCounter}else{throw new Error("bCounter variable is occupied")}})();
